<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
view_xview = global.xorigin;
view_yview = global.yorigin;
depth = -1000

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hhspeed = 0;
vvspeed = 0;
if keyboard_check(ord('A'))
   {
   hhspeed = -20
   }
if keyboard_check(ord('D'))
   {
   hhspeed = 20;
   }
if keyboard_check(ord('W'))
   {
   vvspeed = -20;
   }
if keyboard_check(ord('S'))
   {
   vvspeed = 20;
   }
   
if (true)//(view_xview + hhspeed &gt;= global.xorigin - 32 &amp;&amp; view_xview + hhspeed &lt;= global.xorigin + global.grid_width - view_wport[0] + 32)
{
    view_xview += hhspeed;
}

if(true)//(view_yview + vvspeed &gt;= global.yorigin - 32 &amp;&amp; view_yview + vvspeed &lt;= global.yorigin + global.grid_height - view_hport[0] + 32)
{
view_yview += vvspeed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// zoom out view

var max_zoom_scale_x = window_get_width() * 2;
var max_zoom_scale_y = window_get_height() * 2;
//how many x pixels to y pixel

if(view_wview[0]*1.1 &lt; max_zoom_scale_x &amp;&amp; view_hview[0]*1.1 &lt; max_zoom_scale_y )
{
    view_wview[0] = view_wview[0]*1.1;
    view_hview[0] = view_hview[0]*1.1;
}
else
{
    view_wview[0] = max_zoom_scale_x;
    view_hview[0] = max_zoom_scale_y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// zoom in view

var min_zoom_scale_x = window_get_width();
var min_zoom_scale_y = window_get_height();

if(view_wview[0]*0.9 &gt; min_zoom_scale_x &amp;&amp; view_hview[0]*0.9 &gt; min_zoom_scale_y )
{
    view_wview[0] = view_wview[0]*0.9;
    view_hview[0] = view_hview[0]*0.9;
}
else
{
    view_wview[0] = min_zoom_scale_x;
    view_hview[0] = min_zoom_scale_y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Assign tile underneath cursor to grass.
var mouse_x_i = scr_real_x_to_index(mouse_x);
var mouse_y_i = scr_real_y_to_index(mouse_y);
//Get current tile information
var tileType = scr_get_tile_type(mouse_x_i, mouse_y_i);
if(tileType == global.SPR_KEY_RAIL)
{
    //Turn into grass!

    var tileVariant = irandom_range(0, sprite_get_number(spr_grass)-1)
    scr_set_tile(mouse_x_i, mouse_y_i, global.SPR_KEY_GRASS, tileVariant)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Assign tile underneath cursor to rail.
var mouse_x_i = scr_real_x_to_index(mouse_x);
var mouse_y_i = scr_real_y_to_index(mouse_y);
//Get current tile information
var tileType = scr_get_tile_type(mouse_x_i, mouse_y_i);
if(tileType == global.SPR_KEY_GRASS)
{
    //Turn into rail!
    scr_set_tile(mouse_x_i, mouse_y_i, global.SPR_KEY_RAIL, $00)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (window_get_fullscreen())
{
     window_set_fullscreen(false);
}
else
{
    window_set_fullscreen(true);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
